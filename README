Armaturine Cloud Core
Author: armaturine
Year: 2022

=======================
ПОЯСНЕНИЯ К ФАЙЛАМ:

Корневая директория:
+index.php - главная страница, где находится форма авторизации и куда вставляется таблица для открытой части (это, господа, захуярьте сами). При авторизации оттуда происходит переадресация на страницы либо админа, либо аудтора в папке /pages (main_adm.php и main_audit.php соответственно)

+config.php - парметры подключения к базе данных

+collection.php - набор функций (они же методы как в C#), которые можно дополнять своими новыми. В частности в этом файле лежат функции, тянущие данные из различных баз данных. Создаете свою функцию просто: копируется имеющаяся функция, ей задается новое имя и меняется запрос к MySQL (он выглядит примерно так: "SELECT * FROM `users`"). Как юзать запросы к MySQL можно узнать в гугле/яндекс/лабах по бигдате/мне похуй где

+boot.php - файл, обеспечивающйи сессию авторизации. ТРОГАТЬ НЕ НУЖНО, В НЕМ И ТАК ВСЕ НИШТЯК =)

+do_logout.php - выход из системы (производит обнулении сессии авторизованного + делает соответствующее сообщение в таблицу log в базе)

+do_login.php - производит авторизацию (создает сессию авторизованного + делает соответствующее сообщение о входе в таблицу log в базе)

-----------------------
Директория /pages:
/view - папка, где стили и прочая ебанина в виде bootstrap'a для того чтобы вид имело

+main_adm.php - личный кабинет администратора, где отображается основная таблица (journal) и форма внесения данных в нее

+main_audit.php - личный кабинет аудитора, где отображается основная таблица и таблица входов/выходов (log)

+users_adm.php - страница, доступная админу, с перечнем пользователей системы

+worker_zp_admin.php - страница, доступная админу, с перечнем работников

+add_users_adm.php - страница, доступная админу, с формами добавления работников и пользователей

+actions.php - вспомогательный файл, где реализованы механизмы сохранения сотрудников и пользователей в базу, а также их удаление. Обращение к нему произодится путем упоминания в форме с использованием скрытого поля с именем, соответствующему тэгу в if-е, например, форма
<form class="forms-sample" method='post' action="actions.php" enctype="multipart/form-data">
	<input type="hidden" name="new_worker" value="1">, 
которая находится в файле add_users_adm.php будет обработана только условием
if($_POST['new_worker'])
{ ... }
в файле actions.php; 
аналогично при использовании GET-запроса (/pages/actions.php?del_user=2) будет задействован только код из условия
if($_GET['del_user'])
{...}

=======================
РАЗВЕРТЫВАНИЕ:
1. Создаете базу через phpMyAdmin
2. Экспротируете туда базу из файла base.sql
3. Перепрописываете в config.php данные для подключения к базе
4. Пароли захешированы, так что если что вдруг, стандартный пароль от каждого ЛК, имеющегося в базе: 1111
5. Complete ёпта, правьте эту хуйню под себя. Здесь не доработана открытая часть, так что тут сами

=======================
ЕСЛИ ЧТО-ТО НЕ РАБОТАЕТ И/ИЛИ ВОЗНИКАЮТ ВОПРОСЫ:
1. Читайте возникающие ошибки, они в случае чего выведутся с наименованием косяка на английском, файлом где косяк и номером даже строки с косяком.
2. Гуглите
3. Если не гуглится, повторите пункт 2
4. Внимательно (очень внимательно) читайте код и пытайтесь понять что не так
5. Если что-то не правильно выводится на страницу, проверяйте содержимое php-переменных командами echo() для обычных переменных и print_r() для массивов
6. Перечитывайте этот файлик еще раз более внимательно, мб он поможет
7. Не дергайте автора этой свистопляски по этому вопросу, все важные аспекты тут уже описаны, дальше ваш выход







